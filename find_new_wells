#!/usr/bin/env perl

use strict;
use warnings;

use GFProject;
use PI297Record;
use PI297File;
use POSIX qw/strftime/;

## Provide for conversion between PIDwights' well status codes and GeoFrame's 
my %well_codes = (
	0 => 26,
	1 => 48,
	2 => 30,
	3 => 30,
	4 => 48,
	5 => 30,
	6 => 30,
	7 => 30,
	8 => 17,
	9 => -1,
	A => 27,
	L => 3,
	S => 16,
	T => 1
);

## Provide usage information
die "Usage: $0 <project> <password> <pid_well_file>\n" unless $#ARGV == 2;

## Connect to the project
my $proj = GFProject->connect(@ARGV[0,1]) or die;

## Get a list of all UWI's currently in the project
my %uwis_in_project;
map { $uwis_in_project{$_} = 1 } $proj->getAllUwis;

## Process the file
my $input = PI297File->read($ARGV[2]);
my $included = my $total = 0;
my ($record, $date, $day, $month, $year);
while ($record = $input->nextRecord) {
	$total++;
	## If this UWI already exists in the project
	## or if a comparable 12 digit UWI already exists in the project
	## or if a comparable 10 digit UWI already exists in the project
	## skip it
	next if (
		$uwis_in_project{$record->getUwi} or
		$uwis_in_project{substr($record->getUwi, 0, 12)} or
		$uwis_in_project{substr($record->getUwi, 0, 10)});
	
	## Some entries seem to be missing location info; skip them
	unless ($record->getLongitude && $record->getLatitude) {
		print STDERR "Warning: discarding ", $record->getUwi, " as it has no location information\n";
		next
	}
	## Convert the date to a GeoFrame friendly format
	if ($record->getSpudDate) {
		$day = substr($record->getSpudDate, 6, 2);
		$month = substr($record->getSpudDate, 4, 2);
		$year = substr($record->getSpudDate, 0, 4);
		$date = POSIX::strftime("%d-%b-%Y", 0, 0, 0, $day, $month - 1, $year - 1900)
	} else {
		$date = ''
	}
	## Create the output
	$included++;
	print join("|", $record->getUwi, $record->getWellName, $record->getLeaseName, $record->getWellNumber, $record->getLatitude, $record->getLongitude, $record->getOperator, $date, $record->getElevation, $record->getMeasuredDepth, $well_codes{$record->getFinalWellClass}), "\n"
}
print STDERR "Processed $total wells\n";
print STDERR "Included $included wells\n";
